{
    "version": "https://jsonfeed.org/version/1",
    "title": "忘却のタヌキ",
    "description": "",
    "home_page_url": "https://tank1126.github.io",
    "feed_url": "https://tank1126.github.io/feed.json",
    "user_comment": "",
    "author": {
        "name": "tanuki"
    },
    "items": [
        {
            "id": "https://tank1126.github.io/ge-ren-de-osusumegarahoosusumeapuri.html",
            "url": "https://tank1126.github.io/ge-ren-de-osusumegarahoosusumeapuri.html",
            "title": "個人的おすすめガラホ・共通おすすめアプリ",
            "summary": "今回は、個人的に気に入っている機種・アプリについて述べていきます！ ガラホではできないこと・不便なことが多々ありますが、それを少しでも改善できると幸せです！&hellip;",
            "content_html": "<p>今回は、個人的に気に入っている機種・アプリについて述べていきます！<br>ガラホではできないこと・不便なことが多々ありますが、それを少しでも改善できると幸せです！</p>\n<h2>おすすめのガラホ</h2>\n<p>まず結論から言うと、自分の持っているガラホ数種の中でランキングを付けると…</p>\n<h3>1．KYF42　★★★★★</h3>\n<p>android10をベースにし、Snapdragon215を搭載するガラホです。<br>現状手持ちのガラホで最新のものとなります。<br>おまじないをすることでタッチの代わりのポインターを十字キーで操作でき、純正のホームアプリも便利で個人的に使い勝手が良いです。<br>しかし、android10にしたためか、従来の機種に比べるとメモリの空き容量が少なく、全体的にわずかにもっさりした動作が少し気になります。</p>\n<h3>2．KYF37　★★★★☆</h3>\n<p>android5をベースにし、snapdragon210を搭載するガラホです。<br>KYF37と同じような特徴を持ち、さらにKYF42では省略されてしまった、背面のライト、歩数計、ワンセグといった便利機能が搭載されています。<br>また、メモリの使用量が少ないため、少しだけ動作がましになっています。<br>しかし、android5は少し古いため、だんだんと非対応のアプリが増え始めているのが現状です。<br>自分の環境ではPayPayアプリが近日中に利用できなくなるとの通知が常に表示されています。(11/1現在は決済可能です。)</p>\n<h3>3．KYF31　★★★☆☆</h3>\n<p>基本的な機能はkyf37と同様です。しかし、十字キーでのポインター操作ではなく、数字キー上を、ノートPCのタッチパッドのように使う機能が搭載されており、人によってはこちらのほうが直感的に利用できると感じる方もおられるでしょう。<br>しかし、kyf37では外部アプリの利用時、基本的にはポインターを起動するとずっとポインター、オフにするとキー操作に切り替わるのですが、kyf31ではポインターを有効にしても頻繁にタッチを検出しなくなり、サイト有効化する手間が発生したため、自分にはあまり合いませんでした。</p>\n<h3>ランク外：SHF31、SH02L　☆☆☆☆☆</h3>\n<p>SHF31はガラホの最初期に登場したもので、VoLTE非対応で合ったりと、今では残念に思う部分が増えています。また、搭載OSがandroid4.4と、kyf31,37よりさらに古く、今から使うことにはあまり向いていない状況です。<br>SH02Lに関しては、androidこそ8.0と比較的新しくはあるのですが、後述のおまじないを行ってもポインターが有効化されるのは純正ブラウザーのみ！これではほとんどのアプリを操作することができません。<br>また、これらの2機種についてはホーム画面がガラケーに準拠しており、スマホのように各種アプリをホームに登録しておくことができません。また、通知領域に関してもホーム以外から開く手段が標準では提供されていない(自分の調査不足の可能性もあります)ため、通知領域を利用するタイプのアプリも使い勝手が非常に悪いのです。</p>\n<p>※なお、これ以外にG'sOne TYPE-XXがカタログスペック上はお勧めしたいところではありますが…高額な機種故入手しておりません、予めご了承くださいませ。</p>\n<h2>はじめに導入すべきアプリ</h2>\n<p>ガラホにおいて、最初に入れるべきアプリはアプリをインストールするためのアプリです。おすすめ順を以下に示します。</p>\n<h3>1．Aurora Store</h3>\n<p>これはGooglePlayの代替アプリです。<br>詳しくは別記事にまとめますが、これがあればアプリのインストールは基本的にこれに任せてしまえるほどに便利なものとなっています。<br>しかし、基本的にスマホに最適化されているため、ポインターが使えない機種での利用はかなり面倒です…使えないわけではないのですが、カーソルを思うように操作するのが難しいです…ブラウザでGooglePlayのアプリページを開き、AuroraStoreで開くように共有する、などの方法はありますので、そうやってGooglePlay上の推奨アプリを入れるのがよいかもしれません。</p>\n<h3>2．Files By Google</h3>\n<p>基本的に端末内のファイル操作を通常のスマホと似た形にするのであればこれがおすすめです。ストア以外からのアプリのインストールに大活躍します。また、Aurora Storeが利用しづらい端末ではこちら経由でのインストールのほうが楽かもしれません。<br>しかし入手法がGooglePlay配布が基本なので…Aurora Storeが使えない場合はこれの入手にてこずると思います。その場合は別のアプリを利用することになると思います…最近はそういった配布をしているアプリが減っているので、できればAuroraStoreからこのアプリを入手することをお勧めします。</p>\n<h3>3．Firefox Focus</h3>\n<p>内蔵のブラウザではインストール用ファイルをダウンロードできないので、ブラウザアプリを別にインストールすることがおすすめです。自分は複数入れてみましたが、その中でお勧めなのがこのアプリです。<br>また、基本的にはAuroraStore経由でのインストールがおすすめですが…「Firefox Focus Apk Github」と検索すると、公式でアプリが配布されていますので、Releaseから最新版をダウンロードすればAurora Storeを使わずにインストールすることも可能です。</p>\n<p>今後その他のおすすめアプリについてもまとめていく予定なので、更新を待っていてくださると幸いです！</p>",
            "author": {
                "name": "tanuki"
            },
            "tags": [
                   "ガラホ",
                   "おすすめ"
            ],
            "date_published": "2022-11-16T02:03:54+09:00",
            "date_modified": "2022-11-21T12:13:33+09:00"
        },
        {
            "id": "https://tank1126.github.io/garahowowu-li-yaribian-li-nishi-ou-1.html",
            "url": "https://tank1126.github.io/garahowowu-li-yaribian-li-nishi-ou-1.html",
            "title": "ガラホを(無理やり)便利に使おう #1 旧手法",
            "summary": "古いガラホ向け手法(もう一個スマホがあればできる) ・用意するもの&hellip;",
            "content_html": "<h2 id=\"old\">古いガラホ向け手法(もう一個スマホがあればできる)</h2>\n<p>・用意するもの</p>\n<p>　ガラホ<br>　Bluetoothでのファイル転送が使えるスマホ・パソコンなど</p>\n<p>・手順</p>\n<p>　1．ガラホ本体で提供元不明のアプリのインストールを許可します</p>\n<p class=\"align-center\">設定→(その他の設定)→(ロック・)セキュリティ→提供元不明のアプリ</p>\n<p>　この項目にチェックを入れます</p>\n<p>　2．その他のスマホ・PCでインストールしたいアプリのapkファイルをダウンロードします。</p>\n<p>　今回は<a href=\"https://f-droid.org/\">f-droid</a>から<a href=\"https://f-droid.org/packages/com.aurora.store/\">aurora store</a>を入れることにします。<br>　これはGoogleアカウントなしでストアアプリをインストールできるようになるアプリです。<br><strong>　ポインターが使える機種であれば</strong>今後のアプリインストールがかなり楽になります。</p>\n<figure class=\"post__image\"><img loading=\"lazy\"  src=\"https://tank1126.github.io/media/posts/8/aurora_1-2.png\" sizes=\"(max-width: 48em) 100vw, 768px\" srcset=\"https://tank1126.github.io/media/posts/8/responsive/aurora_1-2-xs.png 300w ,https://tank1126.github.io/media/posts/8/responsive/aurora_1-2-sm.png 480w ,https://tank1126.github.io/media/posts/8/responsive/aurora_1-2-md.png 768w\"  alt=\"\" width=\"677\" height=\"951\"><figcaption>このページをスクロールし(<a href=\"https://tank1126.github.io/aurora_1.png\" target=\"_blank\" rel=\"noopener noreferrer\">拡大画像</a>)</figcaption></figure>\n<figure class=\"post__image\"><img loading=\"lazy\"  src=\"https://tank1126.github.io/media/posts/8/aurora_2-3.png\" sizes=\"(max-width: 48em) 100vw, 768px\" srcset=\"https://tank1126.github.io/media/posts/8/responsive/aurora_2-3-xs.png 300w ,https://tank1126.github.io/media/posts/8/responsive/aurora_2-3-sm.png 480w ,https://tank1126.github.io/media/posts/8/responsive/aurora_2-3-md.png 768w\"  alt=\"\" width=\"677\" height=\"951\"><figcaption>「APKをダウンロード」ボタンを押してダウンロードします(<a href=\"https://tank1126.github.io/aurora_2.png\" target=\"_blank\" rel=\"noopener noreferrer\">拡大画像</a>)</figcaption></figure>\n<p>　3．ガラホに<strong>Bluetoothで</strong>転送する</p>\n<p>　スマホであればFiles等のファイル管理ソフトでダウンロードしたファイルを長押し<br>　→共有メニューからBluetoothを選択<br>　windowsPCであればダウンロードしたファイルを右クリック<br>　→「送る」「Bluetoothデバイス」からガラホへ送信</p>\n<blockquote>\n<p>　一部のandroid機種でapkファイルの送信ができないものがあるようです。その場合は別の機種を用いるか、パソコンから共有しましょう。Bluetooth非対応のPCを持っている場合は、<a href=\"https://tank1126.github.io/garaho_susume.html#new\">新しいガラホ向け手法</a>をお試しください。</p>\n</blockquote>\n<p>　4．<strong>ファイル受信画面から</strong>インストールする</p>\n<p>　ファイル受信の許可画面がガラホに出るので、承諾してください。<br>　そしてダウンロードの進捗状況が通知領域に表示されますので、その進捗をクリックして受信画面にします。<br>　この画面からのみインストールが可能となっています。<br>　ダウンロードが完了したら、「開く」をクリックしてインストールを行いましょう！</p>\n<blockquote>\n<p>インストール後に通信料の警告画面が出る機種が多くあります。wifiのない環境でモバイル通信を使う方は「制限する」にしておく方がよいでしょう。simなし・大容量の契約などであれば「制限しない」で大丈夫です。</p>\n</blockquote>\n<p>以上でインストールは完了したと思います。<br>aurora storeをインストールした場合は、aurora storeを起動することでGoogle Play上で配布されているアプリをインストールすることができます！</p>\n<p>なお、aurora storeは自身のアップデートはできないようなので、接続エラーが発生しほかのアプリをインストールできなくなることがあるようです。その場合は最新版を入れなおすことになるのですが、Files by google等のファイル管理アプリを入れておくとガラホ単体でのダウンロード・インストールもできるようになりますので、おすすめです。</p>",
            "author": {
                "name": "tanuki"
            },
            "tags": [
                   "ガラホ"
            ],
            "date_published": "2022-11-02T15:08:16+09:00",
            "date_modified": "2022-11-02T15:47:29+09:00"
        },
        {
            "id": "https://tank1126.github.io/garahowowu-li-yaribian-li-nishi-ou-2.html",
            "url": "https://tank1126.github.io/garahowowu-li-yaribian-li-nishi-ou-2.html",
            "title": "ガラホを(無理やり)便利に使おう #2 新機種対応手法",
            "summary": "新しいガラホ向け手法(パソコンと事前準備が必要) 比較的新しいガラホでは、上記の手順でのインストールはできないようになっています(そもそも提供元不明アプリのインストールの設定項目がない)&hellip;",
            "content_html": "<h2 id=\"new\">新しいガラホ向け手法(パソコンと事前準備が必要)</h2>\n<p>比較的新しいガラホでは、上記の手順でのインストールはできないようになっています(そもそも提供元不明アプリのインストールの設定項目がない)<br>これはandroid8から、アプリのインストールを個別アプリごとに許可するようになっているためです。<br>ガラホのように、インストールが許可されていない場合、インストールするためのアプリをインストールする許可がないので…管理用のコマンドをパソコンから送ることで強制的にインストールすることになります。</p>\n<p>・用意するもの<br>　ガラホ<br>　接続ケーブル<br>　PC(今回はwindowsを対象に説明します)</p>\n<p>・手順</p>\n<p>　1．パソコンでADBが使えるようにする<br>　この手法ではadbコマンドを利用するため、ADBの環境を作る必要があります。<br>　アプリを作るなど高度なことを今後したいという方はandroid studioをインストールする方法もありますが…今回はadb、fastbootだけが一時的に使えるよう設定します<a href=\"https://tank1126.github.io/garaho_susume.html#sharp2\">※1</a></p>\n<figure class=\"post__image\"><img loading=\"lazy\"  src=\"https://tank1126.github.io/media/posts/7/SDKPlatformTools-2.png\" sizes=\"(max-width: 48em) 100vw, 768px\" srcset=\"https://tank1126.github.io/media/posts/7/responsive/SDKPlatformTools-2-xs.png 300w ,https://tank1126.github.io/media/posts/7/responsive/SDKPlatformTools-2-sm.png 480w ,https://tank1126.github.io/media/posts/7/responsive/SDKPlatformTools-2-md.png 768w\"  alt=\"\" width=\"720\" height=\"900\"><figcaption>(1)Android SDK Platform-Toolsと検索し、こちらの<a href=\"https://developer.android.com/studio/releases/platform-tools?hl=ja\" target=\"_blank\" rel=\"noopener noreferrer\">Google開発者向けサイト</a>に遷移します</figcaption></figure>\n<p> </p>\n<figure class=\"post__image\"><img loading=\"lazy\" src=\"ガラホを(無理やり)便利に使おう_files/SDKDL-2.png\" data-is-external-image=\"true\"  sizes=\"(max-width: 48em) 100vw, 768px\" srcset=\"https://tank1126.github.io/media/posts/4/responsive/SDKDL-2-xs.png 300w, https://tank1126.github.io/media/posts/4/responsive/SDKDL-2-sm.png 480w, https://tank1126.github.io/media/posts/4/responsive/SDKDL-2-md.png 768w\" alt=\"\" width=\"720\" height=\"900\" loading=\"lazy\">\n<figcaption>(2)ダウンロードリンクを選択します。規約画面を下までスクロールしてPlatform-Toolsをダウンロードしましょう</figcaption>\n</figure>\n<figure class=\"post__image\"><img loading=\"lazy\" src=\"ガラホを(無理やり)便利に使おう_files/SDKzip-3.png\" data-is-external-image=\"true\"  sizes=\"(max-width: 48em) 100vw, 768px\" srcset=\"https://tank1126.github.io/media/posts/4/responsive/SDKzip-3-xs.png 300w, https://tank1126.github.io/media/posts/4/responsive/SDKzip-3-sm.png 480w, https://tank1126.github.io/media/posts/4/responsive/SDKzip-3-md.png 768w\" alt=\"\" width=\"642\" height=\"529\" loading=\"lazy\">\n<figcaption>(3)ダウンロードしたファイルを選択し、圧縮フォルダー ツールから「すべて解凍」します(<a href=\"https://tank1126.github.io/SDKzip.png\" target=\"_blank\" rel=\"noopener noreferrer\">拡大画像</a>)</figcaption>\n</figure>\n<figure class=\"post__image\"><img loading=\"lazy\" src=\"ガラホを(無理やり)便利に使おう_files/cmd.png\" data-is-external-image=\"true\"  sizes=\"(max-width: 48em) 100vw, 768px\" srcset=\"https://tank1126.github.io/media/posts/4/responsive/cmd-xs.png 300w, https://tank1126.github.io/media/posts/4/responsive/cmd-sm.png 480w, https://tank1126.github.io/media/posts/4/responsive/cmd-md.png 768w\" alt=\"\" width=\"642\" height=\"529\" loading=\"lazy\">\n<figcaption>(4)解凍が終わると、解凍後のフォルダが表示されます。上のアドレスバー(図中に示した位置)にて「cmd」と入力します。(<a href=\"https://tank1126.github.io/cmd.png\" target=\"_blank\" rel=\"noopener noreferrer\">拡大画像</a>)</figcaption>\n</figure>\n<figure class=\"post__image\"><img loading=\"lazy\" src=\"ガラホを(無理やり)便利に使おう_files/adb.png\" data-is-external-image=\"true\"  sizes=\"(max-width: 48em) 100vw, 768px\" srcset=\"https://tank1126.github.io/media/posts/4/responsive/adb-xs.png 300w, https://tank1126.github.io/media/posts/4/responsive/adb-sm.png 480w, https://tank1126.github.io/media/posts/4/responsive/adb-md.png 768w\" alt=\"\" width=\"979\" height=\"512\" loading=\"lazy\">\n<figcaption>(5)コマンドプロンプトが起動します。「adb」と入力してみましょう(<a href=\"https://tank1126.github.io/adb.png\" target=\"_blank\" rel=\"noopener noreferrer\">拡大画像</a>)</figcaption>\n</figure>\n<figure class=\"post__image\"><img loading=\"lazy\" src=\"ガラホを(無理やり)便利に使おう_files/adb_a.png\" data-is-external-image=\"true\"  sizes=\"(max-width: 48em) 100vw, 768px\" srcset=\"https://tank1126.github.io/media/posts/4/responsive/adb_a-xs.png 300w, https://tank1126.github.io/media/posts/4/responsive/adb_a-sm.png 480w, https://tank1126.github.io/media/posts/4/responsive/adb_a-md.png 768w\" alt=\"\" width=\"979\" height=\"512\" loading=\"lazy\">\n<figcaption>(6)図のような文章が大量に出てくれば導入に成功しています。この画面のまま次のステップに進みます。(<a href=\"https://tank1126.github.io/adb_a.png\" target=\"_blank\" rel=\"noopener noreferrer\">拡大画像</a>)</figcaption>\n</figure>\n<p>　2．PCでインストールしたいアプリのapkファイルをダウンロードします。</p>\n<p>　今回は<a href=\"https://f-droid.org/\">f-droid</a>から<a href=\"https://f-droid.org/packages/com.aurora.store/\">aurora store</a>を入れることにします。<br>　これはGoogleアカウントなしでストアアプリをインストールできるようになるアプリです。<br><strong>　ポインターが使える機種であれば</strong>今後のアプリインストールがかなり楽になります。</p>\n<figure class=\"post__image\"><img loading=\"lazy\" src=\"ガラホを(無理やり)便利に使おう_files/aurora_1-2.png\" data-is-external-image=\"true\"  sizes=\"(max-width: 48em) 100vw, 768px\" srcset=\"https://tank1126.github.io/media/posts/4/responsive/aurora_1-2-xs.png 300w, https://tank1126.github.io/media/posts/4/responsive/aurora_1-2-sm.png 480w, https://tank1126.github.io/media/posts/4/responsive/aurora_1-2-md.png 768w\" alt=\"aurorastore_DL1\" width=\"677\" height=\"951\" loading=\"lazy\">\n<figcaption>このページをスクロールし(<a href=\"https://tank1126.github.io/aurora_1.png\" target=\"_blank\" rel=\"noopener noreferrer\">拡大画像</a>)</figcaption>\n</figure>\n<figure class=\"post__image\"><img loading=\"lazy\" src=\"ガラホを(無理やり)便利に使おう_files/aurora_2-4.png\" data-is-external-image=\"true\"  sizes=\"(max-width: 48em) 100vw, 768px\" srcset=\"https://tank1126.github.io/media/posts/4/responsive/aurora_2-4-xs.png 300w, https://tank1126.github.io/media/posts/4/responsive/aurora_2-4-sm.png 480w, https://tank1126.github.io/media/posts/4/responsive/aurora_2-4-md.png 768w\" alt=\"aurorastore_DL2\" width=\"677\" height=\"951\" loading=\"lazy\">\n<figcaption>「APKをダウンロード」ボタンを押してダウンロードします(<a href=\"https://tank1126.github.io/aurora_2.png\" target=\"_blank\" rel=\"noopener noreferrer\">拡大画像</a>)</figcaption>\n</figure>\n<figure class=\"post__image\"><img loading=\"lazy\" src=\"ガラホを(無理やり)便利に使おう_files/aurora_save.png\" data-is-external-image=\"true\"  sizes=\"(max-width: 48em) 100vw, 768px\" srcset=\"https://tank1126.github.io/media/posts/4/responsive/aurora_save-xs.png 300w, https://tank1126.github.io/media/posts/4/responsive/aurora_save-sm.png 480w, https://tank1126.github.io/media/posts/4/responsive/aurora_save-md.png 768w\" alt=\"\" width=\"720\" height=\"900\" loading=\"lazy\">\n<figcaption>ダウンロードの完了後、どこに保存されたかを確認します。これはedgeでダウンロードした場合ですが、マウスを図の場所に合わせてクリックします</figcaption>\n</figure>\n<figure class=\"post__image\"><img loading=\"lazy\" src=\"ガラホを(無理やり)便利に使おう_files/aurora_save_place.png\" data-is-external-image=\"true\"  sizes=\"(max-width: 48em) 100vw, 768px\" srcset=\"https://tank1126.github.io/media/posts/4/responsive/aurora_save_place-xs.png 300w, https://tank1126.github.io/media/posts/4/responsive/aurora_save_place-sm.png 480w, https://tank1126.github.io/media/posts/4/responsive/aurora_save_place-md.png 768w\" alt=\"\" width=\"720\" height=\"900\" loading=\"lazy\">\n<figcaption>保存場所が開かれるので、そのままにしておきます。</figcaption>\n</figure>\n<p>　3．ガラホをUSBデバッグできるようにする</p>\n<p>　パソコンとつないで操作できるようにする設定です。<br>　(1)ガラホにて設定→その他(の設定)→端末情報→ビルド番号を選択し、7回以上クリックします<br>　(2)一回クリアボタンを押して戻り、開発者向けオプションを選択します<br>　(3)開発者向けオプションのチェックをオンにします。許可することに対しての確認が出る場合はOKしてください。<br>　(4)USBデバッグのチェックを入れ、許可の確認も行います。</p>\n<p>　以上でガラホでの設定は完了です。</p>\n<p>　4．パソコンに接続し、アプリをインストールする</p>\n<p>　パソコンとUSBケーブルで接続します。</p>\n<figure class=\"post__image\"><img loading=\"lazy\" src=\"ガラホを(無理やり)便利に使おう_files/ADB-DeviceFail.png\" data-is-external-image=\"true\"  sizes=\"(max-width: 48em) 100vw, 768px\" srcset=\"https://tank1126.github.io/media/posts/4/responsive/ADB-DeviceFail-xs.png 300w, https://tank1126.github.io/media/posts/4/responsive/ADB-DeviceFail-sm.png 480w, https://tank1126.github.io/media/posts/4/responsive/ADB-DeviceFail-md.png 768w\" alt=\"\" width=\"979\" height=\"512\" loading=\"lazy\">\n<figcaption>(1)１で利用したウインドウにて、「adb devices」と入力します。「unauthorized」と出ている場合、ガラホの画面を確認してください。</figcaption>\n</figure>\n<figure class=\"post__image\"><img loading=\"lazy\" src=\"ガラホを(無理やり)便利に使おう_files/anydesk00002.png\" data-is-external-image=\"true\"  sizes=\"(max-width: 48em) 100vw, 768px\" srcset=\"https://tank1126.github.io/media/posts/4/responsive/anydesk00002-xs.png 300w, https://tank1126.github.io/media/posts/4/responsive/anydesk00002-sm.png 480w, https://tank1126.github.io/media/posts/4/responsive/anydesk00002-md.png 768w\" alt=\"\" width=\"480\" height=\"854\" loading=\"lazy\">\n<figcaption>(1)-1　USBデバッグを許可しますか？という画面が出るので、許可を選択します</figcaption>\n</figure>\n<figure class=\"post__image\"><img loading=\"lazy\" src=\"ガラホを(無理やり)便利に使おう_files/ADB-DeviceSuccess.png\" data-is-external-image=\"true\"  sizes=\"(max-width: 48em) 100vw, 768px\" srcset=\"https://tank1126.github.io/media/posts/4/responsive/ADB-DeviceSuccess-xs.png 300w, https://tank1126.github.io/media/posts/4/responsive/ADB-DeviceSuccess-sm.png 480w, https://tank1126.github.io/media/posts/4/responsive/ADB-DeviceSuccess-md.png 768w\" alt=\"\" width=\"979\" height=\"512\" loading=\"lazy\">\n<figcaption>(2)表記が「Device」になっていることを確認します。</figcaption>\n</figure>\n<figure class=\"post__image\"><img loading=\"lazy\" src=\"ガラホを(無理やり)便利に使おう_files/aurora_save_place_bar-2.png\" data-is-external-image=\"true\"  sizes=\"(max-width: 48em) 100vw, 768px\" srcset=\"https://tank1126.github.io/media/posts/4/responsive/aurora_save_place_bar-2-xs.png 300w, https://tank1126.github.io/media/posts/4/responsive/aurora_save_place_bar-2-sm.png 480w, https://tank1126.github.io/media/posts/4/responsive/aurora_save_place_bar-2-md.png 768w\" alt=\"\" width=\"979\" height=\"512\" loading=\"lazy\">\n<figcaption>(3)2．で開いたapkの保存場所について、上のバーを右クリックし、「アドレスのコピー」を選択します</figcaption>\n</figure>\n<figure class=\"post__image\"><img loading=\"lazy\" src=\"ガラホを(無理やり)便利に使おう_files/adb-install-place.png\" data-is-external-image=\"true\"  sizes=\"(max-width: 48em) 100vw, 768px\" srcset=\"https://tank1126.github.io/media/posts/4/responsive/adb-install-place-xs.png 300w, https://tank1126.github.io/media/posts/4/responsive/adb-install-place-sm.png 480w, https://tank1126.github.io/media/posts/4/responsive/adb-install-place-md.png 768w\" alt=\"\" width=\"979\" height=\"512\" loading=\"lazy\">\n<figcaption>(4)「adb install 」と入力し、スペースを入れ、右クリックすれば場所までが入力されます。</figcaption>\n</figure>\n<figure class=\"post__image\"><img loading=\"lazy\" src=\"ガラホを(無理やり)便利に使おう_files/adb-install-place-file.png\" data-is-external-image=\"true\"  sizes=\"(max-width: 48em) 100vw, 768px\" srcset=\"https://tank1126.github.io/media/posts/4/responsive/adb-install-place-file-xs.png 300w, https://tank1126.github.io/media/posts/4/responsive/adb-install-place-file-sm.png 480w, https://tank1126.github.io/media/posts/4/responsive/adb-install-place-file-md.png 768w\" alt=\"\" width=\"979\" height=\"512\" loading=\"lazy\">\n<figcaption>(5)引き続いて「\\」を入力し、その後ファイル名を記入します。ファイル名の最後が「.apk」でない場合、「.apk」を最後尾につけてください。「.apk」まで記入した後、エンターキーを押して実行します。</figcaption>\n</figure>\n<figure class=\"post__image\"><img loading=\"lazy\" src=\"ガラホを(無理やり)便利に使おう_files/adb-installed.png\" data-is-external-image=\"true\"  sizes=\"(max-width: 48em) 100vw, 768px\" srcset=\"https://tank1126.github.io/media/posts/4/responsive/adb-installed-xs.png 300w, https://tank1126.github.io/media/posts/4/responsive/adb-installed-sm.png 480w, https://tank1126.github.io/media/posts/4/responsive/adb-installed-md.png 768w\" alt=\"\" width=\"979\" height=\"512\" loading=\"lazy\">\n<figcaption>(6)しばらく待つと「Succes」という表記が出ます。これでガラホへのインストールは完了しました。</figcaption>\n</figure>\n<p>今回インストールしたaurora storeを利用することで、今後のアプリをインストールすることができます。</p>\n<p id=\"sharp2\"><code>※1　今後も利用する場合・この手法でうまく動作しない場合は環境変数の設定を行う方がよい。今回は簡易手段のみを掲載</code></p>",
            "author": {
                "name": "tanuki"
            },
            "tags": [
                   "ガラホ"
            ],
            "date_published": "2022-11-02T15:06:57+09:00",
            "date_modified": "2022-11-02T15:49:02+09:00"
        },
        {
            "id": "https://tank1126.github.io/garaho_susume.html",
            "url": "https://tank1126.github.io/garaho_susume.html",
            "title": "ガラホを(無理やり)便利に使おう #0 事前情報",
            "summary": "今回は、自分の愛用しているデバイスである、ガラホについて、またそれにアプリを(半ば無理やり)導入する方法について書いていきたいと思います！ 追加方法だけ知りたい方は、アプリの追加方法まで飛ばしてもらって大丈夫です&hellip;",
            "content_html": "<p>今回は、自分の愛用しているデバイスである、ガラホについて、またそれにアプリを(半ば無理やり)導入する方法について書いていきたいと思います！<br>追加方法だけ知りたい方は、<a href=\"addapp\">アプリの追加方法</a>まで飛ばしてもらって大丈夫です</p>\n<h2>そもそもガラホとは？</h2>\n<p>この記事にたどり着いた方ならばご存じかもしれませんが、ここでいうガラホとは<br><strong>外観・形状・使い方はガラケーのまま、中身だけがandroidになったもの<br></strong>のことです。<a href=\"#sharp1\">※1</a><br>3G終了により使用不能になる、今までのガラケーを置き換える存在として、各社から発売されているものになります。<br>基本的には</p>\n<p>・Google系のアプリが入っていない<br>・アプリストアがないorごく少数のみ用意されている<br>・ガラケーにあった機能も削減されていることがある</p>\n<p>ものであり、「通話とSMS、ちょっとのメール位を今まで通り使いたいな…」という用途であれば、なんとか使える、といった機種です…が…</p>\n<h4><span style=\"text-decoration: underline;\"><em><strong>それじゃ満足できませんよね</strong></em></span></h4>\n<p>ということで、ここからは、非公式ながら<strong>アプリを追加できるようにする方法</strong>を紹介します！</p>\n<h2>所持ガラホについて</h2>\n<p>今回説明するにあたり、こちらの機種を用意しました</p>\n<p><strong>SHF31:</strong>Sharp製、auから2015年発売。Snapdragon400/RAM1GB/ROM8GB。android4.4.4ベース。ジャンク品をフリマアプリで購入<strong><br>KYF31:</strong>Kyocera製、auから2016年発売。Snapdragon210/RAM1GB/ROM8GB。android5.1ベース。ジャンク品をフリマアプリで購入<br><strong>KYF37</strong>:Kyocera製、auから2017年発売。Snapdragon210/RAM1GB/ROM8GB。android5.1ベース。ジャンク品をワールドモバイルにて購入<br><strong>SH02L</strong>:Sharp製、docomoから2018年発売。Snapdragon210/RAM1GB/ROM8GB。android8.1ベース。ジャンク品をオークションサイトにて購入<br><strong>KYF42</strong>:Kyocera製、auから2021年発売。Snapdragon215/RAM1GB/ROM8GB。android10ベース。ジャンク品をオークションサイトにて購入</p>\n<blockquote>全部ジャンク品なのはなぜか？…お金がないんだよぉぉぉ！<br>というより、全体的に発売からしばらくたってもあまり安くなってないんです…<br>上を見ればわかると思いますが、ほとんどが同じような性能で、新しいほうが高性能！ってわけでもなく…仕方がないことではあるんですけどね</blockquote>\n<p>ということで気を取り直して、使ってみた感想なんですが…<br>個人的な順位は<strong>KYF42≧KYF37&gt;KYF31&gt;SHF31&gt;SH02L</strong>となってます！<br>KYF系は順当な番号ですね、新しいほうがいい。42ではスペックが上がっています。<br>しかし、42では37にあった<strong>ワンセグ・歩数計・フラッシュが削られ</strong>てしまっているのが難点ですね…特に懐中電灯代わりにすることができなくなったのが痛い…<br>31はキー部分をタッチポインターとして使うことができます…が、タッチできないのを無理やりどうにかする方が燃えるので…(個人の主観)</p>\n<p><strong>で！</strong>ここまではいいんですけど、<strong><span style=\"text-decoration: underline;\">なぜSH02Lが最下位なのか</span></strong>というと…</p>\n<p><strong>外部アプリでポインターが使えない！！！！</strong></p>\n<p>通常用途なら全く問題ないのですが、今回は<strong>”無理やり便利に使おう”</strong>がテーマなので…無理やりしてもあまり便利にならないので最下位です…残念</p>\n<blockquote><address>ちなみにSHF31では使えます、またSnapdragon400なのでほかのものよりは性能がよく、比較的快適です…古く、androidバージョンが低いこと、また後述するホーム画面問題があるので、個人的にはKYF系より下の順位となります…</address></blockquote>\n<h2 id=\"addapp\">アプリの追加方法</h2>\n<p>それでは実際にアプリを追加していきましょう！<br>ただ、android5などの8未満のガラホと、8や10を搭載しているガラホで方法が大きく異なります…<br>古い手法はBluetoothを用いる方法、新しい手法はパソコンを用いてインストールする方法となっています。<br>また、自分の所持していないガラホに関しては推測となります、予めご了承ください</p>\n<blockquote><address>後多分simplyとかカードケータイはもっとややこしいので普通のガラホに限ります</address></blockquote>\n<p>～2020年のau,～2017年のdocomo,Softbank,Y!mobile(≒android8未満)<br>→<a href=\"https://tank1126.github.io/garahowowu-li-yaribian-li-nishi-ou-1.html\" target=\"_blank\" rel=\"noopener noreferrer\">古いガラホ向け手法</a>または<a href=\"https://tank1126.github.io/garahowowu-li-yaribian-li-nishi-ou-2.html\" target=\"_blank\" rel=\"noopener noreferrer\">新しいガラホ向け手法</a>の両方が可能</p>\n<p>2021年～のau,2018年～のdocomo,Softbank,Y!mobile(≒android8以上)<br>→<a href=\"https://tank1126.github.io/garahowowu-li-yaribian-li-nishi-ou-2.html\" target=\"_blank\" rel=\"noopener noreferrer\">新しいガラホ向け手法</a>へ</p>\n<p id=\"sharp1\"><code>※1 「ガラホ」という名称はauのみが用いていた。なお、現在は従来のガラケー終売に伴い「ケータイ」という呼称での販売に変化している</code></p>",
            "author": {
                "name": "tanuki"
            },
            "tags": [
                   "ガラホ",
                   "おすすめ"
            ],
            "date_published": "2022-10-17T14:47:24+09:00",
            "date_modified": "2022-11-16T01:45:15+09:00"
        },
        {
            "id": "https://tank1126.github.io/blog_freestart.html",
            "url": "https://tank1126.github.io/blog_freestart.html",
            "title": "ブログ作成について",
            "summary": "おはようございます、tanukiです。 初回となる今回は、この記事を作成する際に使ったツール等について簡単に紹介しようと思います。&hellip;",
            "content_html": "<p>おはようございます、tanukiです。</p>\n<p>初回となる今回は、この記事を作成する際に使ったツール等について簡単に紹介しようと思います。<br>詳細については後日、個別のページを作成して公開いたしますので、そちらも併せてみてください！</p>\n<h2>使用ツール・サービス一覧</h2>\n<p>・<a href=\"https://app.infinityfree.net/\" target=\"_blank\" rel=\"noopener noreferrer\">infinityfree</a>：無料のレンタルサーバです。また、用意されているドメイン名のサブドメインとして作成することで無料での公開ができます。</p>\n<p>・<a href=\"https://getpublii.com/\" target=\"_blank\" rel=\"noopener noreferrer\">Publii</a>：無料でwebページの作成を補助してくれるソフトウェア。現在もこれを使って執筆しています。</p>\n<h2>そもそもどうすれば作成できる？</h2>\n<p>大まかな流れを以下に示します！</p>\n<p>１．ブログを公開する場所を決める</p>\n<p>　今回はinfinityfreeの提供している無料ドメインを利用しました。<br>　webサイトのURLを決めることになります。<br>　このサイトはhttp://kimama-tanuki.great-site.net/ですが、このうちgreat-site.netが提供されたドメイン名です。</p>\n<p>　今回は無料サービスを使って経験したかったためこちらを利用させていただいていますが、一般的な.netや.com、.jpといったものを使う場合は<a href=\"https://www.onamae.com/\" target=\"_blank\" rel=\"noopener noreferrer\">お名前.com</a>や<a href=\"https://www.star-domain.jp/\" target=\"_blank\" rel=\"noopener noreferrer\">スタードメイン</a>などで月額や年額で購入することになります。</p>\n<p>２．公開したいものを保存する場所を決める</p>\n<p>　webサイトはほとんどがインターネット上のサーバーに保存されている情報を読み取ることで表示されています。<br>　そういったwebサーバーをレンタルし、そこに保存してもらうことでインターネットから閲覧できるようになるのです。</p>\n<p>　今回はinfinityfreeの提供するサーバを使っています。<br>　「レンタルサーバ　wordpress」などで検索するとすぐにわかると思います。</p>\n<p>3．公開するものを作成する。</p>\n<p>　単に画像だけを表示するのであれば、2．で契約・作成したサイトにアクセスするだけでよいでしょうが、このインターネットでは画像・文章・動画がすべて使われていることも珍しくありません。きちんと整頓し、読める状態にするためには体裁を整える必要があります。</p>\n<p>　これはすべてプログラムのようにテキストで記述していくことも可能ですが、簡単に投稿したい時にはかなり不便です。</p>\n<p>　このため、コンテンツ管理サービス(CMS)を利用することでその手順を短くすることが可能です。今回は静的コンテンツ(完成までを作ってしまってからアップする形式)として作るためにPubliiを利用しました。<br>　逆に動的に編集できるものとしては世界的に有名なWordPressがありますが、今回は簡単に作りたかったため、こちらを使用して軽量に仕上げることにしました。</p>\n<p>　正直に言うとデフォルトで用意されている・または無料で提供されているテンプレートをうまく活用できてはいませんが、これから頑張っていきたいです。</p>",
            "author": {
                "name": "tanuki"
            },
            "tags": [
                   "おすすめ"
            ],
            "date_published": "2022-10-17T09:37:00+09:00",
            "date_modified": "2022-11-02T15:18:31+09:00"
        },
        {
            "id": "https://tank1126.github.io/youkoso.html",
            "url": "https://tank1126.github.io/youkoso.html",
            "title": "はじめに",
            "summary": "このページでは自分の収集した情報や実践内容を共有しています！ 皆さんの参考になれば幸いです、よろしくお願いします&hellip;",
            "content_html": "<p>このページでは自分の収集した情報や実践内容を共有しています！<br>皆さんの参考になれば幸いです、よろしくお願いします</p>\n<h2>著者：tanuki</h2>\n<p>新卒で入った会社からドロップアウトしたばかりの軟弱もの。<br>趣味はスマホの収集や活用方法を考えること。<br>特に制限のあるスマホ(ガラホやシニアスマホなど)が大好物。<br>最近は維持費の安い回線を4つ以上常に契約している。</p>",
            "author": {
                "name": "tanuki"
            },
            "tags": [
            ],
            "date_published": "2022-01-10T08:55:31+09:00",
            "date_modified": "2022-10-17T14:23:31+09:00"
        }
    ]
}
